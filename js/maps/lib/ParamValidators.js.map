{"version":3,"sources":["lib/ParamValidators.ts"],"names":[],"mappings":";;;;;;AAKA,IAAiB,UAAU,CAue1B;AAveD,WAAiB,UAAU,EAAC,CAAC;IAS5B;;OAEG;IACH;QAAA;YAEQ,aAAQ,GAAG,KAAK,CAAC;QAQzB,CAAC;QANA;;WAEG;QACH,mCAAO,GAAP,UAAQ,KAAa,EAAE,GAAY;YAClC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,wBAAC;IAAD,CAVA,AAUC,IAAA;IAVqB,4BAAiB,oBAUtC,CAAA;IAED;;OAEG;IACH;QAAqC,mCAAiB;QAErD;;WAEG;QACH,yBAAoB,IAAoB;YAA5B,oBAA4B,GAA5B,WAA4B;YACvC,iBAAO,CAAC;YADW,SAAI,GAAJ,IAAI,CAAgB;QAExC,CAAC;QAED;;WAEG;QACH,iCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,IAAI,UAAU,CAAC;YAEf,yBAAyB,iBAAyB;gBACjD,EAAE,CAAC,CAAC,iBAAiB,IAAK,IAAI,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,+BAA+B;gBAC/B,iBAAiB,GAAG,iBAAiB,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;gBAE3E,eAAe;gBACf,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBACD,MAAM,CAAC,iBAAiB,CAAC;YAC1B,CAAC;YAGD,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,SAAS,GAAkB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,GAAW,CAAC,CAAC;gBAElB,0BAA0B;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACf,gCAAgC;oBAChC,GAAG,CAAC;wBACH,UAAU,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3C,CAAC,EAAE,CAAC;oBACL,CAAC,QAAO,UAAU,IAAI,IAAI,EAAE;gBAC7B,CAAC;gBAAA,IAAI,CAAC,CAAC;oBACN,UAAU;oBACV,UAAU,GAAG,EAAE,CAAC;oBAChB,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;wBAClB,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;wBAC3B,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClC,CAAC,CAAC,CAAC;gBACJ,CAAC;YAEF,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAK,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACjE,UAAU,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;YACnD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,MAAM,CAAC,UAAU,CAAC;QACnB,CAAC;QACF,sBAAC;IAAD,CA7DA,AA6DC,CA7DoC,iBAAiB,GA6DrD;IA7DY,0BAAe,kBA6D3B,CAAA;IAED;;OAEG;IACH;QAAuC,qCAAiB;QAAxD;YAAuC,8BAAiB;QA6CxD,CAAC;QA3CA;;WAEG;QACH,mCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,IAAI,QAAQ,CAAC;YAEb,6BAA6B,iBAAyB;gBACrD,EAAE,CAAC,CAAC,iBAAiB,IAAK,IAAI,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,+BAA+B;gBAC/B,iBAAiB,GAAG,iBAAiB,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;gBAE3E,eAAe;gBACf,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBACD,MAAM,CAAC,iBAAiB,CAAC;YAC1B,CAAC;YAGD,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,SAAS,GAAkB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,GAAW,CAAC,CAAC;gBAClB,GAAG,CAAC;oBACH,QAAQ,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,CAAC,EAAE,CAAC;gBACL,CAAC,QAAO,QAAQ,IAAI,IAAI,EAAE;YAE3B,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAK,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACjE,QAAQ,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;YACjD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,gBAAgB;YAChB,QAAQ,GAAG,OAAI,QAAQ,OAAG,CAAC;YAE3B,MAAM,CAAC,QAAQ,CAAC;QACjB,CAAC;QACF,wBAAC;IAAD,CA7CA,AA6CC,CA7CsC,iBAAiB,GA6CvD;IA7CY,4BAAiB,oBA6C7B,CAAA;IAED;;OAEG;IACH;QAA2C,yCAAiB;QAA5D;YAA2C,8BAAiB;QAC5D,CAAC;QAAD,4BAAC;IAAD,CADA,AACC,CAD0C,iBAAiB,GAC3D;IADY,gCAAqB,wBACjC,CAAA;IAED;;OAEG;IACH;QAAuC,qCAAiB;QAAxD;YAAuC,8BAAiB;QACxD,CAAC;QAAD,wBAAC;IAAD,CADA,AACC,CADsC,iBAAiB,GACvD;IADY,4BAAiB,oBAC7B,CAAA;IAED;;OAEG;IACH;QAAmC,iCAAiB;QAEnD;;WAEG;QACH,uBAAoB,UAA+B;YAClD,iBAAO,CAAC;YADW,eAAU,GAAV,UAAU,CAAqB;QAEnD,CAAC;QAED;;WAEG;QACH,+BAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,EAAE,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACpC,IAAI,UAAU,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;gBACtD,4BAA4B;gBAC5B,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;gBACtC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;gBAC1C,CAAC;YACF,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,oBAAC;IAAD,CA1BA,AA0BC,CA1BkC,iBAAiB,GA0BnD;IA1BY,wBAAa,gBA0BzB,CAAA;IAED;;OAEG;IACH;QAAsC,oCAAiB;QAItD;;WAEG;QACH,0BAAY,OAAe,EAAE,aAA8B;YAA9B,6BAA8B,GAA9B,qBAA8B;YAC1D,iBAAO,CAAC;YACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACrC,CAAC;QAED;;WAEG;QACH,kCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,IAAI,WAAW,GAAW,IAAI,CAAC,QAAQ,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC1B,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;YACzC,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,SAAS,GAAkB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC1B,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAA3B,CAA2B,CAAC,CAAC;gBACjE,CAAC;gBACD,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACtB,CAAC;YACF,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC1B,GAAG,CAAC,CAAC,IAAI,KAAG,IAAI,UAAU,CAAC,CAAC,CAAC;wBAC5B,UAAU,CAAC,KAAG,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;oBACzD,CAAC;gBACF,CAAC;gBACD,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACtB,CAAC;YAEF,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC1B,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;gBACnC,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACtB,CAAC;YACF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,uBAAC;IAAD,CApDA,AAoDC,CApDqC,iBAAiB,GAoDtD;IApDY,2BAAgB,mBAoD5B,CAAA;IAED;;OAEG;IACH;QAAoC,kCAAiB;QAIpD;;WAEG;QACH,wBAAY,OAAgB;YAC3B,iBAAO,CAAC;YACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACzB,CAAC;QAED;;WAEG;QACH,gCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,SAAS,GAAkB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,KAAK,SAAQ,CAAC;gBAClB,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAA7B,CAA6B,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnE,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC3C,CAAC;YACF,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC9C,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAW,CAAC;gBAC9C,CAAC;YACF,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACpC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,IAAI,UAAU,SAAQ,CAAC;gBACvB,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,IAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM,CAAC,UAAU,CAAC;gBACnB,CAAC;YACF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,qBAAC;IAAD,CAzCA,AAyCC,CAzCmC,iBAAiB,GAyCpD;IAzCY,yBAAc,iBAyC1B,CAAA;IAED;;OAEG;IACH;QAAoD,kDAAiB;QAEpE;;WAEG;QACH,wCAAoB,IAAuC,EAAU,IAAuC;YAAhG,oBAA+C,GAA/C,OAAuB,MAAM,CAAC,iBAAiB;YAAE,oBAA+C,GAA/C,OAAuB,MAAM,CAAC,iBAAiB;YAC3G,iBAAO,CAAC;YADW,SAAI,GAAJ,IAAI,CAAmC;YAAU,SAAI,GAAJ,IAAI,CAAmC;QAE5G,CAAC;QAED;;WAEG;QACH,gDAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,IAAI,UAAU,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClF,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,UAAU,CAAC;gBACnB,CAAC;YACF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,qCAAC;IAAD,CAtBA,AAsBC,CAtBmD,iBAAiB,GAsBpE;IAtBY,yCAA8B,iCAsB1C,CAAA;IAED;;OAEG;IACH;QAA6C,2CAA8B;QAE1E;;WAEG;QACH;YACC,iBAAO,CAAC;QACT,CAAC;QACF,8BAAC;IAAD,CARA,AAQC,CAR4C,8BAA8B,GAQ1E;IARY,kCAAuB,0BAQnC,CAAA;IAED;;OAEG;IACH;QAAyD,uDAA8B;QAAvF;YAAyD,8BAA8B;QAavF,CAAC;QAXA;;WAEG;QACH,qDAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,IAAI,MAAM,GAAc,gBAAK,CAAC,OAAO,YAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QACF,0CAAC;IAAD,CAbA,AAaC,CAbwD,8BAA8B,GAatF;IAbY,8CAAmC,sCAa/C,CAAA;IAED;;OAEG;IACH;QAA4C,0CAAiB;QAE5D;;WAEG;QACH,gCAAoB,IAAuC,EAAU,IAAuC;YAAhG,oBAA+C,GAA/C,OAAuB,MAAM,CAAC,iBAAiB;YAAE,oBAA+C,GAA/C,OAAuB,MAAM,CAAC,iBAAiB;YAC3G,iBAAO,CAAC;YADW,SAAI,GAAJ,IAAI,CAAmC;YAAU,SAAI,GAAJ,IAAI,CAAmC;QAE5G,CAAC;QAED;;WAEG;QACH,wCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,IAAI,UAAU,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClF,MAAM,CAAC,UAAU,CAAC;YACnB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,6BAAC;IAAD,CApBA,AAoBC,CApB2C,iBAAiB,GAoB5D;IApBY,iCAAsB,yBAoBlC,CAAA;IAED;;OAEG;IACH;QAAqC,mCAAsB;QAE1D;;WAEG;QACH;YACC,iBAAO,CAAC;QACT,CAAC;QACF,sBAAC;IAAD,CARA,AAQC,CARoC,sBAAsB,GAQ1D;IARY,0BAAe,kBAQ3B,CAAA;IAED;;OAEG;IACH;QAAkD,gDAAiB;QAElE;;WAEG;QACH,sCAAoB,eAAqB,EAAU,YAAkB;YACpE,iBAAO,CAAC;YADW,oBAAe,GAAf,eAAe,CAAM;YAAU,iBAAY,GAAZ,YAAY,CAAM;QAErE,CAAC;QAED;;WAEG;QACH,8CAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,SAAS,GAAkB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,KAAK,SAAQ,CAAC;gBAClB,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAA7B,CAA6B,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,IAAI,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC5B,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;wBACxB,IAAI,GAAI,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACF,CAAC;gBAGD,IAAI,CAAC,CAAC;oBACL,sBAAsB;oBACtB,IAAI,GAAG,KAAK,CAAC;gBACd,CAAC;YACF,CAAC;YAED,IAAI,OAAO,GAAY,KAAK,CAAC;YAC7B,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;oBACrB,OAAO,GAAG,IAAI,CAAC;gBAChB,CAAC;gBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;oBACxB,OAAO,GAAG,IAAI,CAAC;gBAChB,CAAC;gBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;oBACxB,OAAO,GAAG,IAAI,CAAC;gBAChB,CAAC;YACF,CAAC;YAAA,IAAI,CAAC,CAAC;gBACN,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,SAAS,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC9E,CAAC;YAAA,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YACxE,CAAC;QACF,CAAC;QACF,mCAAC;IAAD,CAjDA,AAiDC,CAjDiD,iBAAiB,GAiDlE;IAjDY,uCAA4B,+BAiDxC,CAAA;IAED;;OAEG;IACH;QAAsC,oCAA4B;QAEjE;;WAEG;QACH;YACC,iBAAO,CAAC;QACT,CAAC;QACF,uBAAC;IAAD,CARA,AAQC,CARqC,4BAA4B,GAQjE;IARY,2BAAgB,mBAQ5B,CAAA;IAED;;OAEG;IACH;QAA2C,yCAAiB;QAA5D;YAA2C,8BAAiB;QAkC5D,CAAC;QAhCA;;WAEG;QACH,uCAAO,GAAP,UAAQ,IAAY,EAAE,GAAY;YACjC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEjC,4BAA4B;YAC5B,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC/C,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC;YAEF;;;;;;;;;;;;;;;mBAeI;YAEH,iBAAiB;YACjB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,OAAI,UAAU,OAAG,CAAC;QAC1B,CAAC;QACF,4BAAC;IAAD,CAlCA,AAkCC,CAlC0C,iBAAiB,GAkC3D;IAlCY,gCAAqB,wBAkCjC,CAAA;AACF,CAAC,EAvegB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAue1B","file":"lib/ParamValidators.js","sourcesContent":["import {Param as ParamNS} from \"./ParamSignature\";\r\nimport ParamData = ParamNS.ParamData;\r\nimport {Enum} from \"./ServerStateEnum\";\r\nimport AbstractEnum = Enum.AbstractEnum;\r\n\r\nexport namespace Validation {\r\n\t/**\r\n\t * \r\n\t */\r\n\texport interface IValidator {\r\n\t\tresolve(data: Object, key?: string): ParamData;\r\n\t\tresolved: boolean;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport abstract class AbstractValidator implements IValidator {\r\n\r\n\t\tpublic resolved = false;\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tresolve(value: Object, key?: string): ParamData {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class StringValidator extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(private lazy: Boolean = true) {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tlet textstring;\r\n\r\n\t\t\tfunction checkTextstring(rawClipNameString: string): string {\r\n\t\t\t\tif (rawClipNameString ==  null) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// trim all non-textual content\r\n\t\t\t\trawClipNameString = rawClipNameString.replace(/(^[\\s\\W]+|[\\s\\W]+$)/gi, \"\");\r\n\r\n\t\t\t\t// check length\r\n\t\t\t\tif (rawClipNameString.length === 0) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn rawClipNameString;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (data instanceof Array) {\r\n\t\t\t\tlet arrayCast: Array<string> = [].concat(data);\r\n\t\t\t\tlet i: number = 0;\r\n\r\n\t\t\t\t// switch lazy/greedy mode\r\n\t\t\t\tif (this.lazy) {\r\n\t\t\t\t\t// lazy = return first valid hit\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\ttextstring = checkTextstring(arrayCast[i]);\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}while (textstring == null);\r\n\t\t\t\t}else {\r\n\t\t\t\t\t// greedy \r\n\t\t\t\t\ttextstring = \"\";\r\n\t\t\t\t\tarrayCast.forEach(i => {\r\n\t\t\t\t\t\tlet o = checkTextstring(i);\r\n\t\t\t\t\t\ttextstring += (o) ? o + \" \" : \"\";\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t}else if (typeof data === \"object\" ||  typeof data === \"string\") {\r\n\t\t\t\ttextstring = data !== null ? data.toString() : \"\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!checkTextstring(textstring)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn textstring;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class ClipNameValidator extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tlet clipName;\r\n\r\n\t\t\tfunction checkClipNameString(rawClipNameString: string): string {\r\n\t\t\t\tif (rawClipNameString ==  null) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// trim all non-textual content\r\n\t\t\t\trawClipNameString = rawClipNameString.replace(/(^[\\s\\W]+|[\\s\\W]+$)/gi, \"\");\r\n\r\n\t\t\t\t// check length\r\n\t\t\t\tif (rawClipNameString.length === 0) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn rawClipNameString;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (data instanceof Array) {\r\n\t\t\t\tlet arrayCast: Array<string> = [].concat(data);\r\n\t\t\t\tlet i: number = 0;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tclipName = checkClipNameString(arrayCast[i]);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}while (clipName == null);\r\n\r\n\t\t\t}else if (typeof data === \"object\" ||  typeof data === \"string\") {\r\n\t\t\t\tclipName = data !== null ? data.toString() : \"\";\r\n\t\t\t}\r\n\r\n\t\t\tif (!checkClipNameString(clipName)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// add quotation\r\n\t\t\tclipName = `\"${clipName}\"`;\r\n\r\n\t\t\treturn clipName;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class TemplateNameValidator extends ClipNameValidator {\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class DataNameValidator extends ClipNameValidator {\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class EnumValidator extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(private _enumClass: typeof AbstractEnum) {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tif (data instanceof this._enumClass) {\r\n\t\t\t\treturn data.value;\r\n\t\t\t}else if (typeof data === \"string\") {\r\n\t\t\t\tlet stringCast = data !== null ? data.toString() : \"\";\r\n\t\t\t\t// format stringy enum value\r\n\t\t\t\tstringCast = stringCast.toUpperCase();\r\n\t\t\t\tstringCast = stringCast.replace(\" \", \"_\");\r\n\t\t\t\tif (this._enumClass.hasOwnProperty(stringCast)) {\r\n\t\t\t\t\treturn this._enumClass[stringCast].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class KeywordValidator extends AbstractValidator {\r\n\t\tprivate _keyword;\r\n\t\tprivate _caseSensitive;\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(keyword: string, caseSensitive: boolean = false) {\r\n\t\t\tsuper();\r\n\t\t\tthis._keyword = keyword;\r\n\t\t\tthis._caseSensitive = caseSensitive;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tlet keywordCopy: string = this._keyword;\r\n\t\t\tif (!this._caseSensitive) {\r\n\t\t\t\tkeywordCopy = keywordCopy.toLowerCase();\r\n\t\t\t}\r\n\r\n\t\t\tif (data instanceof Array) {\r\n\t\t\t\tlet arrayCast: Array<string> = [].concat(data);\r\n\t\t\t\tif (!this._caseSensitive) {\r\n\t\t\t\t\tarrayCast = arrayCast.map(value => String(value).toLowerCase());\r\n\t\t\t\t}\r\n\t\t\t\tif (arrayCast.indexOf(keywordCopy) > -1) {\r\n\t\t\t\t\treturn this._keyword;\r\n\t\t\t\t}\r\n\t\t\t}else if (typeof data === \"object\" && data !== null) {\r\n\t\t\t\tlet objectCast = data;\r\n\t\t\t\tif (!this._caseSensitive) {\r\n\t\t\t\t\tfor (let key in objectCast) {\r\n\t\t\t\t\t\tobjectCast[key] = String(objectCast[key]).toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (objectCast.hasOwnProperty(keywordCopy)) {\r\n\t\t\t\t\treturn this._keyword;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else if (typeof data === \"string\") {\r\n\t\t\t\tif (!this._caseSensitive) {\r\n\t\t\t\t\tdata = String(data).toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (data === keywordCopy) {\r\n\t\t\t\t\treturn this._keyword;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class FrameValidator extends AbstractValidator {\r\n\r\n\t\tprivate _keyword;\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(keyword?: string) {\r\n\t\t\tsuper();\r\n\t\t\tthis._keyword = keyword;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tif (data instanceof Array) {\r\n\t\t\t\tlet arrayCast: Array<string> = [].concat(data);\r\n\t\t\t\tlet index: number;\r\n\t\t\t\tarrayCast = arrayCast.map(element => String(element).toLowerCase());\r\n\t\t\t\tif ((index = arrayCast.indexOf(this._keyword.toLowerCase())) > -1) {\r\n\t\t\t\t\tdata = parseInt(arrayCast[index + 1], 10);\r\n\t\t\t\t}\r\n\t\t\t}else if (typeof data === \"object\" && data !== null) {\r\n\t\t\t\tlet objectCast = data;\r\n\t\t\t\tif (objectCast.hasOwnProperty(this._keyword)) {\r\n\t\t\t\t\t(data = objectCast[this._keyword]) as number;\r\n\t\t\t\t}\r\n\t\t\t}else if (typeof data === \"string\") {\r\n\t\t\t\tdata = Number(data);\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data === \"number\") {\r\n\t\t\t\tlet numberCast: number;\r\n\t\t\t\tif ((numberCast = data as number) >= 0) {\r\n\t\t\t\t\treturn numberCast;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class PositiveNumberValidatorBetween extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(private _min: number = Number.NEGATIVE_INFINITY, private _max: number = Number.POSITIVE_INFINITY) {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tif (typeof data === \"number\") {\r\n\t\t\t\tlet numberCast: number = Math.max(Math.min(data as number, this._max), this._min);\r\n\t\t\t\tif (numberCast >= 0) {\r\n\t\t\t\t\treturn numberCast;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class PositiveNumberValidator extends PositiveNumberValidatorBetween {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class PositiveNumberRoundValidatorBetween extends PositiveNumberValidatorBetween {\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tlet result: ParamData = super.resolve(data, key);\r\n\r\n\t\t\tif (result) {\r\n\t\t\t\treturn Number(result).toFixed();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class NumberValidatorBetween extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(private _min: number = Number.NEGATIVE_INFINITY, private _max: number = Number.POSITIVE_INFINITY) {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tif (typeof data === \"number\") {\r\n\t\t\t\tlet numberCast: number = Math.max(Math.min(data as number, this._max), this._min);\r\n\t\t\t\treturn numberCast;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class NumberValidator extends NumberValidatorBetween {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class BooleanValidatorWithDefaults extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor(private _valueOnSuccess?: any, private _valueOnFail?: any) {\r\n\t\t\tsuper();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tif (data instanceof Array) {\r\n\t\t\t\tlet arrayCast: Array<string> = [].concat(data);\r\n\t\t\t\tlet index: number;\r\n\t\t\t\tarrayCast = arrayCast.map(element => String(element).toLowerCase());\r\n\t\t\t\tif ((index = arrayCast.indexOf(key.toLowerCase())) > -1) {\r\n\t\t\t\t\tdata = arrayCast[index + 1];\r\n\t\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\t\tdata = \tarrayCast[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// @todo: probably add some string-parsing logic:\r\n\t\t\t\t// if just a single boolean param in protocol, try to parse arrayCast[0] which should hold it\r\n\t\t\t\telse {\r\n\t\t\t\t\t// can't resolve array\r\n\t\t\t\t\tdata = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet isValid: boolean = false;\r\n\t\t\tif (typeof data === \"string\") {\r\n\t\t\t\tif (data === \"true\") {\r\n\t\t\t\t\tisValid = true;\r\n\t\t\t\t}else if (data === \"1\") {\r\n\t\t\t\t\tisValid = true;\r\n\t\t\t\t}else if (data === key) {\r\n\t\t\t\t\tisValid = true;\r\n\t\t\t\t}\r\n\t\t\t}else {\r\n\t\t\t\tisValid = (!!data.valueOf());\r\n\t\t\t}\r\n\t\t\tif (isValid) {\r\n\t\t\t\treturn (this._valueOnSuccess !== undefined) ? this._valueOnSuccess : isValid;\r\n\t\t\t}else {\r\n\t\t\t\treturn (this._valueOnFail !== undefined) ? this._valueOnFail : isValid;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class BooleanValidator extends BooleanValidatorWithDefaults {\r\n\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport class TemplateDataValidator extends AbstractValidator {\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tresolve(data: Object, key?: string): ParamData {\r\n\t\t\tlet stringCast = data.toString();\r\n\r\n\t\t\t// data is object: serialize\r\n\t\t\tif (typeof data === \"object\" && data !== null) {\r\n\t\t\t\tstringCast = JSON.stringify(data);\r\n\t\t\t}\r\n\r\n\t\t/*\t// data is string, try to de-serialize to validate as JSON\r\n\t\t\ttry {\r\n\t\t\t\tlet objectCast = JSON.parse(stringCast);\r\n\t\t\t\treturn stringCast;\r\n\t\t\t} catch (e) {}\r\n\r\n\t\t\t// data is string, try to de-serialize to validate as XML\r\n\t\t\tlet xmlCast;\r\n\t\t\tparseString(stringCast, {async: false}, (err, res) => {\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\txmlCast = res;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (xmlCast) {\r\n\t\t\t\treturn stringCast;\r\n\t\t\t}*/\r\n\r\n\t\t\t// add qoutation \r\n\t\t\tstringCast = stringCast.replace(/\\\"/g, \"\\\\\\\"\");\r\n\t\t\treturn `\"${stringCast}\"`;\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/source/"}