{"version":3,"sources":["lib/AMCPConnectionOptions.ts"],"names":[],"mappings":"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","file":"lib/AMCPConnectionOptions.js","sourcesContent":["// Callback NS\r\nimport {Callback as CallbackNS} from \"./global/Callback\";\r\nimport IBooleanCallback = CallbackNS.IBooleanCallback;\r\nimport IErrorCallback = CallbackNS.IErrorCallback;\r\nimport IEventCallback = CallbackNS.IEventCallback;\r\nimport IStringCallback = CallbackNS.IStringCallback;\r\nimport ISocketStatusCallback = CallbackNS.ISocketStatusCallback;\r\n\r\n/**\r\n * \r\n */\r\nexport namespace Options {\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\texport enum QueueMode  {\r\n\t\tSALVO \t\t= 1,\r\n\t\tSEQUENTIAL \t= 2,\r\n\t\tSMART \t\t= 3\r\n\t}\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport interface IConnectionOptions {\r\n\thost?: string;\r\n\tport?: number;\r\n\tautoConnect?: boolean;\r\n\tautoReconnect?: boolean;\r\n\tautoReconnectInterval?: number;\r\n\tautoReconnectAttempts?: number;\r\n\tqueueMode?: Options.QueueMode;\r\n\tdebug?: boolean;\r\n\tonLog?: IStringCallback;\r\n\tonConnectionStatus?: ISocketStatusCallback;\r\n\tonConnectionChanged?: IBooleanCallback;\r\n\tonConnected?: IBooleanCallback;\r\n\tonDisconnected?: IBooleanCallback;\r\n\tonError?: IErrorCallback;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class ConnectionOptions implements IConnectionOptions {\r\n\tpublic host: string = \"localhost\";\r\n\tpublic port: number = 5250;\r\n\tpublic autoConnect: boolean = true;\r\n\tpublic autoReconnect: boolean = true;\r\n\tpublic autoReconnectInterval: number = 1000;\r\n\tpublic autoReconnectAttempts: number = Infinity;\r\n\tpublic queueMode: Options.QueueMode = Options.QueueMode.SEQUENTIAL;\t// @todo: change to SALVO once server has command UIDs https://github.com/CasparCG/Server/issues/475\r\n\tpublic debug: boolean = false;\r\n\tpublic onLog: IStringCallback = undefined;\r\n\tpublic onConnectionStatus: ISocketStatusCallback = undefined;\r\n\tpublic onConnectionChanged: IBooleanCallback;\r\n\tpublic onConnected: IBooleanCallback = undefined;\r\n\tpublic onDisconnected: IBooleanCallback = undefined;\r\n\tpublic onError: IErrorCallback = undefined;\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tconstructor(options: IConnectionOptions);\r\n\tconstructor(host?: string, port?: number);\r\n\tconstructor(hostOrOptions: (IConnectionOptions|string), port?: number) {\r\n\r\n\t\t// if object\r\n\t\tif (hostOrOptions && typeof hostOrOptions === \"object\") {\r\n\t\t\tif (hostOrOptions.hasOwnProperty(\"host\")) {\r\n\t\t\t\tlet dnsValidation: Array<string> = /((?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?)(?:\\:([0-9]{4}))?/.exec(hostOrOptions[\"host\"]);\r\n\t\t\t\tif (dnsValidation) {\r\n\t\t\t\t\tdelete hostOrOptions[\"host\"];\r\n\t\t\t\t\t// host\r\n\t\t\t\t\tif (!!dnsValidation[1]) {\r\n\t\t\t\t\t\tthis.host = dnsValidation[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// port\r\n\t\t\t\t\tif (!!dnsValidation[2]) {\r\n\t\t\t\t\t\tthis.port = parseInt(dnsValidation[2], 10);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: object assign\r\n\t\t\tfor (let key in hostOrOptions) {\r\n\t\t\t\tif (!hostOrOptions.hasOwnProperty(key)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.hasOwnProperty(key)) {\r\n\t\t\t\t\tthis[key] = hostOrOptions[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// else\r\n\t\tif (typeof hostOrOptions === \"string\") {\r\n\t\t\tlet dnsValidation: Array<string> = /((?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?)(?:\\:([0-9]{4}))?/.exec(hostOrOptions.toString());\r\n\t\t\tif (dnsValidation) {\r\n\t\t\t\t// host\r\n\t\t\t\tif (!!dnsValidation[1]) {\r\n\t\t\t\t\tthis.host = dnsValidation[1];\r\n\t\t\t\t}\r\n\t\t\t\t// port\r\n\t\t\t\tif (!!dnsValidation[2]) {\r\n\t\t\t\t\tthis.port = parseInt(dnsValidation[2], 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (port) {\r\n\t\t\t\tthis.port = port;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/source/"}